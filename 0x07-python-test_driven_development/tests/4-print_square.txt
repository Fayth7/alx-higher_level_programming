==============================
How to Use 4-print_square.py
==============================

This module defines a function ``print_square(size)``.

Usage
=====

``print_square(...)`` prints a square with the character '#' of the provided size.

::
    
    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

    >>> print_square(0)
    <BLANKLINE>

    >>> print_square(1)
    #

Invalid Arguments
=================

The argument ``size`` must be an integer. If it's not an integer, a TypeError is raised.

::

    >>> print_square(4.5)
    Traceback (most recent call last):
      File "<doctest 4-print_square.txt[12]>", line 1, in <module>
        print_square(4.5)
      File "<string>", line 7, in print_square
    TypeError: size must be an integer

If the argument ``size`` is less than 0, a ValueError is raised.

::

    >>> print_square(-1)
    Traceback (most recent call last):
      File "<doctest 4-print_square.txt[16]>", line 1, in <module>
        print_square(-1)
      File "<string>", line 9, in print_square
    ValueError: size must be >= 0

If the argument ``size`` is a float and less than 0, a TypeError is raised.

::

    >>> print_square(-1.5)
    Traceback (most recent call last):
      File "<doctest 4-print_square.txt[20]>", line 1, in <module>
        print_square(-1.5)
      File "<string>", line 9, in print_square
    TypeError: size must be an integer

